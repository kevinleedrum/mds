.mx-input {
  label {
    color: var(--mds-color-secondary);
  }

  ::placeholder {
    color: var(--mds-color-secondary-medium);
  }

  caret-color: var(--mds-color-primary);

  .mx-input-wrapper {
    color: var(--mds-color-secondary);
    background: var(--mds-color-white);
    border-color: var(--mds-color-secondary);

    &:hover:not(.disabled, .error, :focus-within) {
      border-color: var(--mds-color-primary);
    }

    &:focus-within {
      border-color: var(--mds-color-primary);
      box-shadow: 0px 0px 5px 0px rgba(0, 115, 230, 0.50);
    }

    i {
      font-size: 1.5rem;
    }

    label {
      background: var(--mds-color-white);
      transform-origin: 0 0;
      transition: transform 0.1s ease-out;
      --translate-y: -1.375rem;

      &.dense {
        --translate-y: -1rem;
      }

      &.floating {
        transform: translate3d(0, var(--translate-y), 0) scale(0.8);

        &.has-left-icon {
          transform: translate3d(-2.25rem, var(--translate-y), 0) scale(0.8);
        }
      }

      @media (prefers-reduced-motion: reduce) {
        transition: none;
      }
    }

    textarea {
      &::-webkit-scrollbar {
        width: 0.75rem;
        background: transparent;
      }

      &::-webkit-scrollbar-thumb {
        border-radius: 0.5rem;
        border: 0.25rem solid transparent;
        background-clip: content-box;
        background-color: var(--mds-color-secondary-light);
      }
    }

    &.error {
      border-color: var(--mds-color-error);

      label,
      i {
        color: var(--mds-color-error);
      }
    }

    &.disabled {
      color: var(--mds-color-secondary-medium);
    }

    &.readonly {
      background: var(--mds-color-secondary-ultralight);
    }

    .icon-suffix {

      .suffix,
      .character-count {
        color: var(--mds-color-secondary);
      }
    }
  }

  .assistive-text {
    color: var(--mds-color-secondary);
  }

  .error+*>.assistive-text {
    color: var(--mds-color-error);
  }
}