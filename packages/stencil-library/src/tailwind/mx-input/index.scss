.mx-input {
  label,
  ::placeholder {
    color: var(--mds-text-input-label);
  }
  &.disabled label {
    color: var(--mds-text-input-disabled);
  }

  caret-color: var(--mds-caret-input);

  .mx-input-wrapper {
    color: var(--mds-text-input);
    background: var(--mds-bg-input);
    border-color: var(--mds-border-input);
    &:hover:not(.disabled, .error, :focus-within) {
      border-color: var(--mds-border-input-hover);
    }
    &:focus-within {
      border-color: var(--mds-border-input-focus);
    }

    i {
      font-size: 1.5rem;
    }

    label {
      background: var(--mds-bg-input);
      transform-origin: 0 0;
      transition: transform 0.1s ease-out;
      --translate-y: -1.375rem;
      &.dense {
        --translate-y: -1rem;
      }
      &.floating {
        transform: translate3d(0, var(--translate-y), 0) scale(0.8);
        &.has-left-icon {
          transform: translate3d(-2.25rem, var(--translate-y), 0) scale(0.8);
        }
      }
      @media (prefers-reduced-motion: reduce) {
        transition: none;
      }
    }

    textarea {
      &::-webkit-scrollbar {
        width: 0.75rem;
        background: transparent;
      }
      &::-webkit-scrollbar-thumb {
        border-radius: 0.5rem;
        border: 0.25rem solid transparent;
        background-clip: content-box;
        background-color: var(--mds-bg-input-scroll-thumb);
      }
    }

    &.error {
      border-color: var(--mds-border-input-error);

      label,
      i {
        color: var(--mds-text-input-error);
      }
    }

    &.disabled {
      color: var(--mds-text-input-disabled);
    }

    &.readonly {
      background: var(--mds-bg-input-readonly);
    }

    .icon-suffix {
      .suffix,
      .character-count {
        color: var(--mds-text-input-label);
      }
    }
  }

  .assistive-text {
    color: var(--mds-text-input-assistive);
  }

  .error + * > .assistive-text {
    color: var(--mds-text-input-error);
  }
}
